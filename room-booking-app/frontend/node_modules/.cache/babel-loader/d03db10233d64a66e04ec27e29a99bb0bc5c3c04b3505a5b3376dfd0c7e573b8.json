{"ast":null,"code":"var _jsxFileName = \"/Users/nenadandrejic/Coding/German booking/room-booking-app/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Configure axios defaults\naxios.defaults.baseURL = API_BASE_URL;\n\n// Add token to requests\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.user);\n          setToken(storedToken);\n        } catch (error) {\n          console.error('Failed to verify token:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","API_BASE_URL","process","env","REACT_APP_API_URL","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","AuthProvider","children","_s","user","setUser","loading","setLoading","setToken","initializeAuth","storedToken","get","data","console","login","email","password","post","newToken","userData","setItem","_error$response2","_error$response2$data","Error","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/nenadandrejic/Coding/German booking/room-booking-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  employeeId?: string;\n  isAdmin: boolean;\n  locationId?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  token: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Configure axios defaults\naxios.defaults.baseURL = API_BASE_URL;\n\n// Add token to requests\naxios.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.user);\n          setToken(storedToken);\n        } catch (error) {\n          console.error('Failed to verify token:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/login', { email, password });\n      const { token: newToken, user: userData } = response.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Login failed');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    logout,\n    token,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}